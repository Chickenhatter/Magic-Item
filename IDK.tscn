[gd_scene load_steps=2 format=3 uid="uid://bc0ole8n5rsc1"]

[sub_resource type="GDScript" id="GDScript_x7sug"]
script/source = "extends Node
class_name Mana

signal max_mana_changed(diff: int)
signal mana_changed(dif: int)
signal mana_depleted

@export var max_mana: int = 3 : set = set_max_mana
@export var nospell: bool = false : set = set_nospell, get = get_nospell

var nospell_timer: Timer = null

@onready var mana: int = max_mana : set = set_mana, get = get_mana

func set_max_mana(value: int):
	var clamped_value = 1 if value <= 0 else value
	
	if not clamped_value == max_mana:
		var difference = clamped_value - max_mana
		max_mana = value
		max_mana_changed.emit(difference)
		
		if mana > max_mana:
			mana = max_mana

func get_max_mana() -> int:
	return max_mana

func set_nospell(value: bool):
	nospell = value

func get_nospell() -> bool:
	return nospell

func set_temporary_nospell(time: float):
	if nospell_timer == null:
		nospell_timer = Timer.new()
		nospell_timer.one_shot = true
		add_child(nospell_timer)
	
	if nospell_timer.timeout.is_connected(set_nospell):
		nospell_timer.timeout.disconnect(set_nospell)
	
	nospell_timer.set_wait_time(time)
	nospell_timer.timeout.connect(set_nospell.bind(false))
	nospell = true
	nospell_timer.start()

func set_mana(value:int):
	if value < mana and nospell:
		return
	
	var clamped_value = clampi(value, 0, max_mana)
	
	if clamped_value != mana:
		var difference = clamped_value - mana
		mana = value
		mana_changed.emit(difference)
		
"

[node name="Node2D" type="Node2D"]
script = SubResource("GDScript_x7sug")
